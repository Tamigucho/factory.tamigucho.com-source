in the years display in App.js: <div> of the years' pokelist should have a CSS class, so they'll have round black borders to not be confused with one another








To add a CSS class to the <div> of the years' pokelist in App.js, you can modify the PokemonList.js component. This component is responsible for rendering the list of pokemons grouped by year.

In the PokemonList.js file, you can add a new CSS class to the <div> that wraps each year's pokemons.

  <div key={year}>
    <h2>
      {year} <span className="badge bg-secondary">{pokemons.length}</span>
    </h2>
    {pokemons.map((pokemon) => (
      <Link key={pokemon.id} to={`/${pokemon.name}`}>
        {pokemon.name}</Link>
        ))}
  </div>
  
You can define this new CSS class in the theme.css file. For example, you can add a class named .year-group with the desired styles:

.year-group {
  border: 1px solid black;
  border-radius: 10px;
  padding: 10px;
  margin: 10px;
}


Remember to add this class to the theme.css file:


/* Pok√©mon list styles */
.pokemon-list {
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.pokemon-item {
  margin: 10px;
  padding: 10px 10px 0 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  width: 200px;
  text-align: center;
}

.pokemon-item img {
  width: 100%;
  height: auto;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

.pokemon-item .type {
  display: inline-block;
  padding: 5px 10px;
  margin: 5px;
  border-radius: 4px;
  color: white;
  cursor: pointer;
}

.type-badge{border-radius:5px;padding:3px;border:1px solid;white-space:nowrap;margin-right:5px;text-decoration:none;color:initial}
.type-badge:hover{color:initial;text-decoration:none}

After these changes, each year's pokemons list will be wrapped in a <div> with a round black border, making it distinct from other years.
