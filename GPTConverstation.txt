You see that now Pokémons in data/pokemons.json have the "genre-species" key!

Please add that to PokemonDetails.js, above the Type field.
Place different {} for the first value of the "genre-species" array, and other for the second, and make the only first clickable (this is considered the genre).

Then create components/Genres.js to list the genres and show how many Pokemons (with a badge) are in each genre; make each genre clickable, so the brand new components/GenrePage.js will show the page of a genre, a Pokémon counter next to its <h2> heading showing how many Pokémons are using such genre, and so as in /types/{Type} and /years/{Year},
/genres/{Genre} should show all of the Pokemon on that genre.

Route /genres and /genres/{Genre} in App.js routing, and the nav item in components/Header.js.





To add the "genre-species" key to the PokemonDetails.js, you can modify the component as follows:

startLine: 124
endLine: 130

Add the following code after line 130:

<p>Genre: 
  <Link to={`/genres/${pokemon['genre-species'][0]}`} className={`genre-badge genre-${pokemon['genre-species'][0].toLowerCase()}`}>
    {pokemon['genre-species'][0]}
  </Link> 
  {pokemon['genre-species'][1]}
</p>

Next, create a new file Genres.js[ in the ](file:///home/daniella/com-factory-tamigucho/README.md#53%2C54-53%2C54)components directory:

import React from 'react';
import { Link } from 'react-router-dom';
import pokemonsData from '../data/pokemons.json';

const Genres = () => {
  const genres = [...new Set(pokemonsData.map(pokemon => pokemon['genre-species'][0]))];
  const pokemonsByGenre = pokemonsData.reduce((groups, pokemon) => {
    const genre = pokemon['genre-species'][0];
    if (!groups[genre]) {
      groups[genre] = [];
    }
    groups[genre].push(pokemon);
    return groups;
  }, {});

  return (
    <div className="genres-page">
      <h2>Genres <span className="badge bg-secondary">{genres.length}</span></h2>
      <ul>
        {genres.map((genre, index) => (
          <li key={index}>
            <Link to={`/genres/${genre}`}>{genre}</Link> <span className="badge bg-secondary" title={`Creatures in this genre: ${pokemonsByGenre[genre].length}`}>{pokemonsByGenre[genre].length}</span>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default Genres;

Create a new file GenrePage.js[ in the ](file:///home/daniella/com-factory-tamigucho/README.md#53%2C54-53%2C54)components directory:

import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import pokemonsData from '../data/pokemons.json';
import PokemonItem from './PokemonItem';

const GenrePage = () => {
  const { genre } = useParams();
  const [pokemonsByGenre, setPokemonsByGenre] = useState([]);

  useEffect(() => {
    const filteredPokemons = pokemonsData.filter(pokemon => pokemon['genre-species'][0] === genre);
    setPokemonsByGenre(filteredPokemons);
  }, [genre]);

  return (
    <div className="genre-page">
      <h2>{genre} <span className="badge bg-secondary" title={`Total Pokémons in this genre: ${pokemonsByGenre.length}`}>{pokemonsByGenre.length}</span></h2>
      <div className="pokemon-list">
        {pokemonsByGenre.map((pokemon, index) => (
          <PokemonItem key={index} {...pokemon} />
        ))}
      </div>
    </div>
  );
};

export default GenrePage;

In App.js, add the following routes:

startLine: 15
endLine: 19

Add the following code after line 19:

<Route path="/genres" element={<Genres />} />
<Route path="/genres/:genre" element={<GenrePage />} />

Finally, in Header.js, add the navigation item for genres:

startLine: 45
endLine: 46

Add the following code after line 46:

<li className="nav-item">
  <Link className={`nav-link ${location.pathname.startsWith('/genres') ? 'active' : ''}`} to="/genres">
    Genres
  </Link>
</li>






http://localhost:3000:
Uncaught ReferenceError: Genres is not defined
    App App.js:119
    React 11
    workLoop scheduler.development.js:266
    flushWork scheduler.development.js:239
    performWorkUntilDeadline scheduler.development.js:533

Probably because Header.js and/or App.js didn't import the new files?






Yes, you're correct. The error is because Genres and GenrePage are not imported in App.js. You should add the following import statements at the top of your App.js file:

import Genres from './components/Genres';
import GenrePage from './components/GenrePage';


Also, ensure that Genres is imported in Header.js if you're using it there. Add the following import statement at the top of your Header.js file:

import Genres from './components/Genres';

After adding these import statements, your application should work as expected.
