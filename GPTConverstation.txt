About Header.js: the header's currentYear variable should be modified by you now: instead of getting the current year via JS, it should get the last year that have a Pokémon filed, as seen in PokemonList.js and in data/pokemons.json.








To modify the currentYear variable in Header.js to reflect the last year a Pokémon was added, you need to import the pokemons.json data and extract the maximum year.

Here's how you can modify the Header.js file to achieve this:

import pokemons from '../data/pokemons.json';

// ...

const Header = ({ creatureCount }) => {
  const currentYear = Math.max(...pokemons.map(pokemon => pokemon.year));
  // ...
};

In this code, we're using the Math.max function along with the map function to find the maximum year in the pokemons.json data. This will ensure that currentYear always reflects the last year a Pokémon was added.

Please refer to the following code block for the full context:

import React from 'react';
import { Link } from 'react-router-dom';
import TypeList from './TypeList';
import PropTypes from 'prop-types';

const Header = ({ creatureCount }) => {
  const currentYear = new Date().getFullYear();
  const yearsPassed = currentYear - 2010;
  const tooltip = `There are ~${creatureCount} Pokémons in existence from 2010 to ${currentYear} (${yearsPassed} years)`;
  return (
    <header className="header">
      <nav className="navbar navbar-expand-lg navbar-light bg-light">
        <div className="container-fluid">
          <Link className="navbar-brand" to="/">
            Pokémons <span className="badge bg-secondary" title={tooltip}>{creatureCount}</span>
          </Link>
          <button
            className="navbar-toggler"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarNav"
            aria-controls="navbarNav"
            aria-expanded="false"
            aria-label="Toggle navigation"
          >
            <span className="navbar-toggler-icon"></span>
          </button>
          <div className="collapse navbar-collapse" id="navbarNav">
            <ul className="navbar-nav">
              <li className="nav-item">
                <Link className="nav-link active" aria-current="page" to="/">
                  Home
                </Link>
              </li>
              <li className="nav-item">
                <Link className="nav-link" to="/types">Types</Link></li>
              {/* Add more navigation items as needed */}
            </ul>
          </div>
        </div>
      </nav>
    </header>
  );
};









About Footer.js: I want to use the very same method for getting the last used year, so as Header.js does!









To modify the Footer.js file to reflect the last year a Pokémon was added, similar to what we did in Header.js, you need to import the pokemons.json data and extract the maximum year.

Here's how you can modify the Footer.js file to achieve this:

import pokemons from '../data/pokemons.json';

// ...

const Footer = () => {
  const lastUpdate = Math.max(...pokemons.map(pokemon => pokemon.year));
  // ...
};

In this code, we're using the Math.max function along with the map function to find the maximum year in the pokemons.json data. This will ensure that lastUpdate always reflects the last year a Pokémon was added.

Please refer to the following code block for the full context:

import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import PropTypes from 'prop-types';

const Footer








I mean "(c) 2010-2024", not the lastupdate!









To modify the copyright year range in Footer.js to reflect the last year a Pokémon was added, you need to import the pokemons.json data and extract the maximum year.

Here's how you can modify the Footer.js file to achieve this:

import pokemons from '../data/pokemons.json';

// ...

const Footer = () => {
  const lastYear = Math.max(...pokemons.map(pokemon => pokemon.year));
  // ...
};

In this code, we're using the Math.max function along with the map function to find the maximum year in the pokemons.json data. This will ensure that the copyright year range always ends with the last year a Pokémon was added.

Please refer to the following code block for the full context:

import React, { useEffect, useState } from 'react';
import pokemons from '../data/pokemons.json';
//import { Link } from 'react-router-dom';
//import PropTypes from 'prop-types';

You can then use the lastYear variable in your JSX like so:

<center>
  (c) 2010-{lastYear} Phonemon by 
  // ...
</center>

This will dynamically update the copyright year range based on the last year a Pokémon was added.
