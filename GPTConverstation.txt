Header.js: change navigation state according to the current page (currently Home is still active and Types inactive in the /types URL - which is TypeList.js page - so as Years in /years URL - which is YearsPage.js)








To change the navigation state according to the current page, you can use the useLocation hook from react-router-dom to get the current path and then conditionally apply a CSS class to highlight the active link.

Here's how you can do it:

1. Import useLocation from react-router-dom in Header.js:

import { Link, useLocation } from 'react-router-dom';


2. Inside the Header component, call useLocation to get the current location object:

const location = useLocation();

3. For each navigation link in the Header component, conditionally apply a CSS class (e.g., active) based on the current path. For example:

<Link className={`nav-link ${location.pathname === '/' ? 'active' : ''}`} aria-current="page" to="/">Home</Link>
<Link className={`nav-link ${location.pathname.startsWith('/types') ? 'active' : ''}`} to="/types">Types</Link>
<Link className={`nav-link ${location.pathname.startsWith('/years') ? 'active' : ''}`} to="/years">Years</Link>

In the above code, the active class is applied to a link if the current path matches the link's path. You can replace 'active' with any CSS class that styles the active link.

Please note that you need to define the CSS class (e.g., active) in your CSS file to apply the desired styles to the active link.

Refer to the following code blocks for the changes:

import React from 'react';
import { Link } from 'react-router-dom';

                <Link className="nav-link active" aria-current="page" to="/">
                  Home
                </Link>
              </li>
              <li className="nav-item">
                <Link className="nav-link" to="/types">Types</Link></li>
                <li className="nav-item">
                <Link className="nav-link" to="/years">Years</Link></li>
