PokemonDetails.js: creatures URL won't anymore be for example /Charmander, but /creatures/Charmander








To change the URL structure for the Pokemon details, you need to modify the routing configuration in your application. This is typically done in the main routing file (e.g., App.js or routes.js), where you define all the routes for your application.

The exact code change will depend on the routing library you're using. If you're using react-router-dom, for example, you would change the Route for the Pokemon details from something like this:

<Route path="/:pokemonName" component={PokemonDetails} />

to this:

<Route path="/creatures/:pokemonName" component={PokemonDetails} />

This change will make it so that the PokemonDetails component is shown when the URL matches /creatures/Charmander, instead of /Charmander.

Remember to update all the links in your application that point to the Pokemon details page. For example, if you have a Link component that points to the Pokemon details page, you would change it from:

<Link to={`/${pokemonName}`}>Details</Link>

to:

<Link to={`/creatures/${pokemonName}`}>Details</Link>

This will ensure that when a user clicks on the link, they are taken to the correct URL.

Also, in your PokemonDetails.js file, you'll need to update how you access the pokemonName from the URL. If you're using react-router-dom, you can access it from the match prop:

const pokemonName = this.props.match.params.pokemonName;

This pokemonName variable will contain the name of the Pokemon, which you can then use to fetch the correct data for the Pokemon details page.








Have to update the Pokémon links in the years shown in App.js, too!









To update the Pokémon links in the years shown in App.js, you need to modify the Route components related to the years.

In the Routes component, you have a Route for /years/:year. This route probably renders a list of Pokémon for a specific year. If each Pokémon in this list is a link to the Pokémon's details page, you need to update these links to include /creatures/ in the URL.

Here's how you can do it:

If you're using a Link component to create the link to the Pokémon's details page, you would change it from:

<Link to={`/${pokemonName}`}>Details</Link>

to:

<Link to={`/creatures/${pokemonName}`}>Details</Link>

This change should be made in the component that renders the list of Pokémon for a specific year, which is likely YearPage or a similar component.

Remember, the pokemonName variable should contain the name of the Pokémon, which you can use to create the correct URL for the Pokémon's details page.
